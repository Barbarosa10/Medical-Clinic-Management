syntax = "proto3";

import "google/api/annotations.proto";

package idm;

message AuthenticationRequest {
    string username = 1;
    string password = 2;
}
message AuthenticationResponse{
    bool succes = 1;
    string jwt_token = 2;
}

message RegisterRequest {
    string username = 1;
    string password = 2;
    string email = 3;
    string role = 4;
}
message RegisterResponse{
    int32 user_id = 1;
    bool succes = 2;
    string message = 3;
}

message DeleteRequest {
    int32 id = 1;
}
message DeleteResponse{
    bool succes = 1;
    string message = 2;
}

message UsersRequest {
    string role = 1;
}
message UsersResponse{
    bool succes = 1;
    string message = 2;
}

message ValidateJWTRequest {
    string jwt_token = 1;
}
message ValidateJWTResponse {
    bool is_valid = 1;
    string message = 2;
    string sub = 3;
    string role = 4;
    string role_id = 5;
}

message InvalidateJWTRequest {
    string jwt_token = 1;
}
message InvalidateJWTResponse {
    string message = 1;
}

message ChangePasswordRequest{
    string username = 1;
    string old_password = 2;
    string new_password = 3;
}
message ChangePasswordResponse{
    string message = 1;
}

service AuthenticationService{
    rpc Register(RegisterRequest) returns (RegisterResponse){
        option (google.api.http) = {
            post: "/idm/register"
            body: "*"
        };
    }
    rpc GetUsers(UsersRequest) returns (UsersResponse){
        option (google.api.http) = {
            post: "/idm/users"
            body: "*"
        };
    }
    rpc Delete(DeleteRequest) returns (DeleteResponse){
        option (google.api.http) = {
            post: "/idm/delete"
            body: "*"
        };
    }
    rpc Authenticate (AuthenticationRequest) returns (AuthenticationResponse) {
        option (google.api.http) = {
            post: "/idm/authenticate"
            body: "*"
        };
    }
    rpc ValidateJWT (ValidateJWTRequest) returns (ValidateJWTResponse){
        option (google.api.http) = {
            post: "/idm/validateJWT"
            body: "*"
        };
    }
    rpc InvalidateJWT (InvalidateJWTRequest) returns (InvalidateJWTResponse){
        option (google.api.http) = {
            post: "/idm/invalida"
            body: "*"
        };
    }
    rpc ChangePassword(ChangePasswordRequest) returns (ChangePasswordResponse){
        option (google.api.http) = {
            post: "/idm/changepassword"
            body: "*"
        };
    }
}